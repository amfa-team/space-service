name: Deploy Production

on:
  push:
    branches:
      - master

jobs:
  back-merge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Merge master -> develop
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          from_branch: master
          target_branch: develop
          github_token: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-
      - run: echo -e "//npm.pkg.github.com/:_authToken=$NPM_TOKEN\n@amfa-team:registry=https://npm.pkg.github.com" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: yarn install
      - run: echo "SENTRY_DNS=${{secrets.SENTRY_EXAMPLE_DNS}}" >> packages/example/.env
      - run: echo "API_ENDPOINT=${{secrets.API_ENDPOINT_PRODUCTION}}" >> packages/example/.env
      - run: echo "USER_API_ENDPOINT=${{secrets.USER_API_ENDPOINT_PRODUCTION}}" >> packages/example/.env
      - name: build
        run: yarn build
      # deploy-react:
      - name: publish sdk
        run: yarn npm:release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_SDK }}
      # deploy-example:
      - name: deploy
        working-directory: ./packages/example
        run: yarn aws:profile:set --stage production && yarn deploy:production
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_SDK }}
          SLACK_CHANNEL: deploys
          SLACK_TITLE: space-service/example deployed
      # deploy-api:
      - name: serverless deploy
        working-directory: ./packages/api
        run: yarn aws:profile:set --stage production && yarn deploy:production
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SENTRY_DNS: ${{ secrets.SENTRY_API_DNS }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          MONGO_DB_URL: ${{ secrets.MONGO_DB_URL_PRODUCTION }}
          API_SECRET: ${{ secrets.API_SECRET_PRODUCTION }}
          USER_SERVICE_API_SECRET: ${{ secrets.USER_SERVICE_API_SECRET_PRODUCTION }}
